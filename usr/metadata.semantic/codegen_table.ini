#######################################################################################
#
#
# This ini file controls the code generator that is used to generate
# semantic & validation classes for the Adapter. 
#
#
#######################################################################################



# Trace to stdout:
VERBOSE=FALSE

MODELS_FROM_REPOSITORY=TRUE

#
# Source file locations for IMF Models (relative to this ini file):
#
SOURCE_DIR_IMF_MODEL=C:\Users\admin\git\snowflakev2-connector\build\models.metadata.annotatedjava/table.com.unicosolution.adapter.snowflakev2.models.metadata.annotatedjava_1.0.0.jar

#
# Auxiliary models (no code is generated for these but code generator needs access to 
# the models because they are referenced/extended by classes we are generating code for)
#
SOURCE_DIR_IMF_MODEL_AUX=C:\Informatica\IDP10.0.0\ICT/Application/jars/com.infa.products.basemodel.core.annotatedjava.jar/com/informatica/metadata/common/modelextension/
SOURCE_DIR_IMF_MODEL_AUX=C:\Informatica\IDP10.0.0\ICT/Application/jars/com.infa.products.extensions.adapter.sdk.models.sdkpatternblocks.annotatedjava.jar/
SOURCE_DIR_IMF_MODEL_AUX=C:\Informatica\IDP10.0.0\ICT/Application/jars/com.infa.products.extensions.adapter.sdk.models.sdkcanonical.annotatedjava.jar/

#
# The top level container object for the generated semantic layer:
#
TOP_LEVEL_CONTAINER=com.informatica.adapter.sdkadapter.patternblocks.catalog.P_Catalog

#
# Where to write generated files (relative to this ini file):
#
TARGET=src

#
# Classname prefixes for the various auto/manual semantic/validation classes:
#
PFX_AUTO_SEM=SA
PFX_MAN_SEM=S
PFX_AUTO_OM=MA
PFX_MAN_OM=M
PFX_AUTO_CHANGE=SA

#
# package postfixes for semantic/validation classes:
#
PK_POSTFIX_AUTO_SEM=semantic.auto
PK_POSTFIX_MAN_SEM=semantic.manual
PK_POSTFIX_AUTO_OM=objectmanager.auto
PK_POSTFIX_MAN_OM=objectmanager.manual

#
# When generating a factory, we must be given the class name of the factory. 
#
# If this is a adapter-pattern specific factory, this class name must also be included in the semantic bundle extension
#
FACTORY_CLASSNAME=com.unicosolution.adapter.snowflakev2.table.metadata.factory.AdapterFactory

#
# When generating a factory, we must be given the class name of the factory base class:
FACTORY_BASE_CLASSNAME=com.informatica.adapter.sdkadapter.patternblocks.semantic.manual.SP_Factory

#
# When generating a factory interface, we must be given the interface name of the factory base class:
FACTORY_BASE_INTERFACENAME=com.informatica.sdk.adapter.metadata.patternblocks.semantic.iface.Factory


#
# Should generated semantic layer implement IMF interface?
# (changing this could break typecasts in manual semantic classes!)
#
SEM_IMPL_IMF=false

#
# This is set to true to include user facing factory methods in the generated factory.
#
#
FACTORY_USER_METHODS=true

#
# Should generated semantic layer implement user facing interfaces?
#
#
#
SEM_IMPL_USER_IFACES=true


#
# For the pattern classes, interfaces are currently prefixed SDK* (may change!)
#
PFX_USER_IFACE=SEM


#
# For the pattern classes, interfaces are placed (by naming convention) in a package 
# ending with:
#
PK_POSTFIX_USER_IFACE=semantic.iface

#
#replace package prefix in model classes with the new prefix to follow naming guidelines for user facing interfaces
#
USER_IFACE_PKG_REPLACE=com.informatica.adapter.sdkadapter,com.informatica.sdk.adapter.metadata


#
# Semantic layer implements change notification ?
#
SEM_CHANGE_SUPPORT=true

# adding relationship Property list

